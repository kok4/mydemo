package internal

/*
替换字符串
	${SERVICE_NAME}:
末尾增加函数
*/
const kTemplateMsgProc = `
package proc

// Code generated by gen.
// 本文件是对应 ${SERVICE_NAME} 的处理器实现文件。
// 框架代码由 gen 生成，具体实现需要手工填写。
// 再次生成时会合并原有实现。

import (
	${C2S_MSG_IMPORTS}
	"zeus/net/server"
)

// Proc_${SERVICE_NAME} 是消息处理类(Processor).
// 必须实现 NewProc_${SERVICE_NAME}(), OnClosed() 和 MsgProc_*() 接口。
type Proc_${SERVICE_NAME} struct {
	sess server.ISession // 一般都需要包含session对象

	// 可能还应该包含用户和房间对象
	// user *User
	// room *Room
}

func NewProc_${SERVICE_NAME}(sess server.ISession) *Proc_${SERVICE_NAME} {
	return &Proc_${SERVICE_NAME}{
		sess: sess,
		// user, room 暂时为空，待创建
	}
}

func (p *Proc_${SERVICE_NAME}) OnClosed() {
	// 会话断开时动作...
}
`
